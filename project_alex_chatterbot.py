import speech_recognition 
import pyttsx3
from datetime import date
import time
from chatterbot import ChatBot
from chatterbot.trainers import ListTrainer

def listening():
    print("Alex listening...")	
    robot_ear = speech_recognition.Recognizer() # T·∫°o ra robot_ear c√≥ th·ªÉ nghe ƒë∆∞·ª£c
    with speech_recognition.Microphone() as mic: # Nghe ƒë∆∞·ª£c v·ªõi vi·ªác s·ª≠ d·ª•ng mic
        audio = robot_ear.listen(mic, phrase_time_limit=5) # audio = robot_ear nghe ƒë∆∞·ª£c b·∫±ng mic, v·ªõi gi·ªõi h·∫°n th·ªùi gian l√† 5s
    try:
        audio_text = robot_ear.recognize_google(audio) # Nh·∫≠n d·∫°ng √¢m thanh nghe ƒë∆∞·ª£c ·ªü tr√™n .recognize_google() v·ªõi ng√¥n ng·ªØ l√† ti·∫øng Vi·ªát
    except:
        audio_text = ""
    return audio_text



def speaking(text):

    engine = pyttsx3.init() #Kh·ªüi t·∫°o bi·∫øn engine c√≥ th·ªÉ n√≥i ƒë∆∞·ª£c

    voices = engine.getProperty('voices') #Kh·ªüi t·∫°o voices c√≥ th·ªÉ ch·ªânh s·ª≠a 
    engine.setProperty("voice", voices[1].id) #Ch·ªânh s·ª≠a  th√†nh gi·ªçng n·ªØ [1]

    engine.say(text) #Chuy·ªÅn bi·∫øt vƒÉn b·∫£n text v√†o h√†m say()
    engine.runAndWait() #Ch·∫°y bi·∫øn engine khi ƒë√£ ƒë∆∞·ª£c ch·ªânh s·ª≠a v√† truy·ªÅn vƒÉn b·∫£n c·∫ßn ƒë·ªçc


def chatter_bot(info):

    chatbot = ChatBot("Chatpot")

    trainer = ListTrainer(chatbot)
    trainer.train([
        "Hi",
        "Welcome, friend ü§ó",
    ])
    trainer.train([
        "Are you a plant?",
        "No, I'm the pot below the plant!",
    ])
    trainer.train([
        "How are you ?",
        "I am fine, thank you",
    ])
    speaking(f"ü™¥ {chatbot.get_response(info)}")
    return


def get_time(text):
    now = ""
    if "today" in text:
        today = date.today()
        day = today.strftime("%B %d, %Y")
        now = "Today is %s" %day
    if "time" in text:
        now = time.strftime("It is %H:%M", time.localtime())
    speaking(now)
    return


def hello():

    day_time = int(time.strftime('%H'))
    if day_time < 12:
        speaking("Good morning. Have a good day")
    elif 12 <= day_time < 18:
        speaking("Good afternoon. What have you planned for this afternoon")
    else:
        speaking("Good evening. Have you had dinner yet")
    return

def main():

    hello()

    while True:
        info = listening()

        exit_conditions = ("goodbye", "bye", "quit", "exit")
        
        if info in exit_conditions:
            print("Bye Bye üëãüëã")
            speaking("Goodbye, see you again !!!")
            break
        elif ("today" or "time") in info:
            get_time(info)
        else:
            chatter_bot(info)

if __name__ == "__main__":
    main()
